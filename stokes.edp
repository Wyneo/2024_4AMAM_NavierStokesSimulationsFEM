// Parameters  
int nn = 30;
func f1 = 0;
func f2 = -30;
//real re = 10000, nu = 1./re;

// Mesh 
mesh Th = square(nn, nn); 

// Fespace 
fespace Uh(Th, P2);
Uh u1, u2; 
Uh v1, v2; 
fespace Ph(Th, P1); 
Ph p, q; 
Ph psi,phi;

macro Grad(u) [dx(u),dy(u),dz(u)] //
macro div(u1,u2) (dx(u1)+dy(u2)) //

// Problem 
solve stokes ([u1, u2, p], [v1, v2, q]) 
	= int2d(Th)(
		dx(u1)*dx(v1)  
		+ dy(u1)*dy(v1)
		+ dx(u2)*dx(v2)
		+ dy(u2)*dy(v2)
		//nu*(Grad(u1)'*Grad(v1)+Grad(u2)'*Grad(v2))
		- p*div(v1,v2)
		- 1e-10*p*q
	)
	- int2d(Th)(
		f1*v1
		+ f2*v2
	)
	- int2d(Th)(
		q*div(u1,u2)
	)
	+ on(1, 2, 4, u1=0, u2=0)
	+ on(3, u1=1, u2=0)
; 

solve streamlines (psi, phi) = 
    int2d(Th)(
      dx(psi)*dx(phi) 
      + dy(psi)*dy(phi) 
    )
    + int2d(Th)(
      - phi*(dy(u1) - dx(u2))
    ) 
    + on(1, 2, 3, 4, psi=0)
;
// Plot
plot(Th, wait=1);
plot([u1, u2],p, value=1, wait=1);
plot(p, value=1, wait=1);
//plot(psi, wait=1);
//plot(p, wait=1);